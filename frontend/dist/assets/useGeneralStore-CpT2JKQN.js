import{R as T}from"./index-DA_85Pj5.js";const R=r=>{let t;const e=new Set,s=(d,a)=>{const p=typeof d=="function"?d(t):d;if(!Object.is(p,t)){const S=t;t=a??(typeof p!="object"||p===null)?p:Object.assign({},t,p),e.forEach(f=>f(t,S))}},n=()=>t,l={setState:s,getState:n,getInitialState:()=>m,subscribe:d=>(e.add(d),()=>e.delete(d))},m=t=r(s,n,l);return l},j=r=>r?R(r):R,F=r=>r;function L(r,t=F){const e=T.useSyncExternalStore(r.subscribe,()=>t(r.getState()),()=>t(r.getInitialState()));return T.useDebugValue(e),e}const k=r=>{const t=j(r),e=s=>L(t,s);return Object.assign(e,t),e},U=r=>r?k(r):k,C={BASE_URL:"/",DEV:!0,MODE:"production",PROD:!1,SSR:!1,VITE_API_BASE_URL:"http://127.0.0.1:8000",VITE_SUPABASE_BUCKET_URL:"https://xtrujmeokdsllltgynpp.supabase.co/storage/v1/object/public/healthyskin-bucket//"},O=new Map,_=r=>{const t=O.get(r);return t?Object.fromEntries(Object.entries(t.stores).map(([e,s])=>[e,s.getState()])):{}},A=(r,t,e)=>{if(r===void 0)return{type:"untracked",connection:t.connect(e)};const s=O.get(e.name);if(s)return{type:"tracked",store:r,...s};const n={connection:t.connect(e),stores:{}};return O.set(e.name,n),{type:"tracked",store:r,...n}},D=(r,t={})=>(e,s,n)=>{const{enabled:u,anonymousActionType:g,store:l,...m}=t;let d;try{d=(u??(C?"production":void 0)!=="production")&&window.__REDUX_DEVTOOLS_EXTENSION__}catch{}if(!d)return r(e,s,n);const{connection:a,...p}=A(l,d,m);let S=!0;n.setState=(o,v,i)=>{const c=e(o,v);if(!S)return c;const y=i===void 0?{type:g||"anonymous"}:typeof i=="string"?{type:i}:i;return l===void 0?(a==null||a.send(y,s()),c):(a==null||a.send({...y,type:`${l}/${y.type}`},{..._(m.name),[l]:n.getState()}),c)};const f=(...o)=>{const v=S;S=!1,e(...o),S=v},h=r(n.setState,s,n);if(p.type==="untracked"?a==null||a.init(h):(p.stores[p.store]=n,a==null||a.init(Object.fromEntries(Object.entries(p.stores).map(([o,v])=>[o,o===p.store?h:v.getState()])))),n.dispatchFromDevtools&&typeof n.dispatch=="function"){let o=!1;const v=n.dispatch;n.dispatch=(...i)=>{(C?"production":void 0)!=="production"&&i[0].type==="__setState"&&!o&&(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),o=!0),v(...i)}}return a.subscribe(o=>{var v;switch(o.type){case"ACTION":if(typeof o.payload!="string"){console.error("[zustand devtools middleware] Unsupported action format");return}return b(o.payload,i=>{if(i.type==="__setState"){if(l===void 0){f(i.state);return}Object.keys(i.state).length!==1&&console.error(`
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `);const c=i.state[l];if(c==null)return;JSON.stringify(n.getState())!==JSON.stringify(c)&&f(c);return}n.dispatchFromDevtools&&typeof n.dispatch=="function"&&n.dispatch(i)});case"DISPATCH":switch(o.payload.type){case"RESET":return f(h),l===void 0?a==null?void 0:a.init(n.getState()):a==null?void 0:a.init(_(m.name));case"COMMIT":if(l===void 0){a==null||a.init(n.getState());return}return a==null?void 0:a.init(_(m.name));case"ROLLBACK":return b(o.state,i=>{if(l===void 0){f(i),a==null||a.init(n.getState());return}f(i[l]),a==null||a.init(_(m.name))});case"JUMP_TO_STATE":case"JUMP_TO_ACTION":return b(o.state,i=>{if(l===void 0){f(i);return}JSON.stringify(n.getState())!==JSON.stringify(i[l])&&f(i[l])});case"IMPORT_STATE":{const{nextLiftedState:i}=o.payload,c=(v=i.computedStates.slice(-1)[0])==null?void 0:v.state;if(!c)return;f(l===void 0?c:c[l]),a==null||a.send(null,i);return}case"PAUSE_RECORDING":return S=!S}return}}),h},N=D,b=(r,t)=>{let e;try{e=JSON.parse(r)}catch(s){console.error("[zustand devtools middleware] Could not parse the received json",s)}e!==void 0&&t(e)};function J(r,t){let e;try{e=r()}catch{return}return{getItem:n=>{var u;const g=m=>m===null?null:JSON.parse(m,void 0),l=(u=e.getItem(n))!=null?u:null;return l instanceof Promise?l.then(g):g(l)},setItem:(n,u)=>e.setItem(n,JSON.stringify(u,void 0)),removeItem:n=>e.removeItem(n)}}const E=r=>t=>{try{const e=r(t);return e instanceof Promise?e:{then(s){return E(s)(e)},catch(s){return this}}}catch(e){return{then(s){return this},catch(s){return E(s)(e)}}}},P=(r,t)=>(e,s,n)=>{let u={storage:J(()=>localStorage),partialize:o=>o,version:0,merge:(o,v)=>({...v,...o}),...t},g=!1;const l=new Set,m=new Set;let d=u.storage;if(!d)return r((...o)=>{console.warn(`[zustand persist middleware] Unable to update item '${u.name}', the given storage is currently unavailable.`),e(...o)},s,n);const a=()=>{const o=u.partialize({...s()});return d.setItem(u.name,{state:o,version:u.version})},p=n.setState;n.setState=(o,v)=>{p(o,v),a()};const S=r((...o)=>{e(...o),a()},s,n);n.getInitialState=()=>S;let f;const h=()=>{var o,v;if(!d)return;g=!1,l.forEach(c=>{var y;return c((y=s())!=null?y:S)});const i=((v=u.onRehydrateStorage)==null?void 0:v.call(u,(o=s())!=null?o:S))||void 0;return E(d.getItem.bind(d))(u.name).then(c=>{if(c)if(typeof c.version=="number"&&c.version!==u.version){if(u.migrate){const y=u.migrate(c.state,c.version);return y instanceof Promise?y.then(I=>[!0,I]):[!0,y]}console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return[!1,c.state];return[!1,void 0]}).then(c=>{var y;const[I,w]=c;if(f=u.merge(w,(y=s())!=null?y:S),e(f,!0),I)return a()}).then(()=>{i==null||i(f,void 0),f=s(),g=!0,m.forEach(c=>c(f))}).catch(c=>{i==null||i(void 0,c)})};return n.persist={setOptions:o=>{u={...u,...o},o.storage&&(d=o.storage)},clearStorage:()=>{d==null||d.removeItem(u.name)},getOptions:()=>u,rehydrate:()=>h(),hasHydrated:()=>g,onHydrate:o=>(l.add(o),()=>{l.delete(o)}),onFinishHydration:o=>(m.add(o),()=>{m.delete(o)})},u.skipHydration||h(),f||S},x=P,B=r=>{const t=r;t.use={};for(const e of Object.keys(t.getState()))t.use[e]=()=>t(s=>s[e]);return t},H=r=>({isLogged:!1,setIsLogged:t=>r({isLogged:t}),userLogged:null,setUserLogged:t=>r({userLogged:t}),isLoadingUser:!0,setIsLoadingUser:t=>r({isLoadingUser:t})}),M=(r,t)=>({favorites:[],addToFavorites:e=>r(s=>({favorites:[...s.favorites,e]})),removeFromFavorites:e=>r(s=>({favorites:s.favorites.filter(n=>n._id!==e)})),isFavorite:e=>t().favorites.some(n=>n._id===e)}),q=r=>({cartItems:[],addToCart:t=>r(e=>e.cartItems.find(n=>n._id===t._id)?{cartItems:e.cartItems.map(n=>n._id===t._id?{...n,quantity:((n==null?void 0:n.quantity)??0)+((t==null?void 0:t.quantity)??0)}:n)}:{cartItems:[...e.cartItems,t]}),removeFromCart:t=>r(e=>({cartItems:e.cartItems.filter(s=>s._id!==t)})),updateQuantity:(t,e)=>r(s=>({cartItems:s.cartItems.map(n=>n._id===t?{...n,quantity:e}:n)})),clearCart:()=>r({cartItems:[]})}),$=r=>({checkoutForm:null,setCheckoutForm:t=>r({checkoutForm:t})}),z=U()(x(N((...r)=>({...H(...r),...M(...r),...q(...r),...$(...r)}),{name:"General Store"}),{name:"general-store"})),W=B(z);export{W as u};
