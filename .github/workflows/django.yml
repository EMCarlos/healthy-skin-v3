name: Django CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up environment variables
        run: |
          echo "DJANGO_SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "DEBUG=True" >> $GITHUB_ENV
          echo "SUPABASE_DB_NAME=test_db" >> $GITHUB_ENV
          echo "SUPABASE_DB_USER=postgres" >> $GITHUB_ENV
          echo "SUPABASE_DB_PASSWORD=postgres" >> $GITHUB_ENV
          echo "SUPABASE_DB_HOST=localhost" >> $GITHUB_ENV
          echo "SUPABASE_DB_PORT=5432" >> $GITHUB_ENV

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput

      - name: Run Tests
        run: |
          python manage.py test

      - name: Run linting (optional)
        run: |
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
